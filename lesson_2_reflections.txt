1) What happens when you initialize a repository? Why do you need to do it?
When you run "git init" you create the hidden .git directory which git will use to track history (commits, etc.)  If you don't do this, you will not be able to utilize git functionality to provide version control of your files.

2) How is the staging area different from the working directory and the repository? What value do you think it offers?
The staging area is an area that is in flux, or is in draft status.  It is used to prepare files and data that are ready to be committed to the repository.  It can be thought of as a sandbox, or scratch area, where everything can be edited, modified, and created to be ready to add to the repository, then added when everything is ready.

3) What are some situations when branches would be helpful in keeping your history organized? How would branches help?
Branches could be used to make new, relatively independent versions of the code.  One example of when this could be used is when an experimental or drastic change is made that you may or may not want to implement.  The use of branches allows you to independently work on 2 different versions of your code, fix bugs in each independently, and combine in the future if desired.

4) How do the diagrams help you visualize the branch structure?
They show you the logical layout of commits on each branch, where branches split off from one another, and which commits cannot be navigated to from any position in the repository.